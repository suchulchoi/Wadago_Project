package com.wadago.controller;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.wadago.dto.FileDTO;
import com.wadago.repository.ImgRepository;
import com.wadago.repository.MemberRepository;
import com.wadago.vo.ImgVo;
import com.wadago.vo.MemberVo;

@Controller
@RequestMapping("/model")
public class ModelController {
	
	@Autowired
	ImgRepository ir;
	@Autowired
	MemberRepository mr;
	
	@GetMapping("/try.do")
	public String modelTry(ImgVo imgvo, Model model){
			
		model.addAttribute("img", ir.findAll());
		model.addAttribute("count",ir.getImgCount());
		return "/model/try";
	}
	@PostMapping("/insertImg")
	public String insertImg(ImgVo imgVo ,FileDTO dto){
		MultipartFile uploadfile = dto.getUploadfile();
		Integer count= ir.getImgCount()+1;
		String fileName = count+".jpg";
		if (uploadfile != null) {			
			dto.setImg_name(fileName);
			try {
				File file = new File("C:\\Users\\mom\\Desktop\\wadago\\wadago_project\\src\\main\\resources\\static\\img\\" + fileName);
				uploadfile.transferTo(file);
			} catch (IOException e) {
				e.printStackTrace();
			} 
		} 
		boolean insert=false;
		try {	
				ImgVo createImg=ir.save(imgVo);
				if(createImg!=null) {
					insert=true;
				}	
		}catch(Exception e){
			e.printStackTrace();
		}
		if(insert) {
			 return "redirect:/model/test.do?fileName=" + fileName;			
		}else {
			return "redirect:/model/";
		}			
	}
	@GetMapping("/result/{page}")
	public String modelResult(@PathVariable int page , Model model){
		 Page<MemberVo> pageList = mr.findAllByGrade(PageRequest.of(page-1, 3, Sort.by(Sort.Direction.DESC, "id")), 1);
		  // 불러올 페이지의 데이터 1페이지는 0부터 시작

	  	model.addAttribute("page", pageList);
		model.addAttribute("img", ir.findAll());
		return "/model/result";
	}
	@GetMapping("/introduce")
	public ModelAndView modelIntroduce(ModelAndView model) {
		
		model.setViewName("/model/introduce");
		
		return model;
	}
	@GetMapping("/thanks")
	public ModelAndView thanks(ModelAndView model) {
		
		
		model.setViewName("/model/thanks");
		
		return model;
	}

	@RequestMapping(value = "/test.do", method = RequestMethod.GET)
	public ModelAndView Test(@RequestParam(value = "fileName", required = false) String fileName) {
		ModelAndView mav = new ModelAndView();
		
		
		String url = "http://127.0.0.1:5555/predict_price/" + fileName;;
		String sb = "";
		try {
			HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
			
					
			BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream(), "utf-8"));

			String line = null;

			while ((line = br.readLine()) != null) {
				sb = sb + line + "\n";
			}
			System.out.println("========br======" + sb.toString());
			if (sb.toString().contains("ok")) {
				System.out.println("test");
			}
			br.close();

			System.out.println("" + sb.toString());
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		mav.addObject("count",ir.getImgCount());
		mav.addObject("test1", sb.toString());  			
		mav.addObject("fail", false);
		mav.setViewName("/model/test");   
		return mav;
	}
	@PostMapping("/imgResult")
	  public String imgResult(ImgVo imgVo) {
		  boolean update=false;
			try {
				ImgVo imgOption=ir.save(imgVo);
				
					if(imgOption!=null) {
						update=true;
					}
				
			}catch(Exception e){
				e.printStackTrace();
			}		
			if(update) {
				return "redirect:/model/thanks";			
			}else {
				return "redirect:/model/thanks";
			}
	  }
	
}
